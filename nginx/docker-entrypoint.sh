#!/bin/sh
set -eu

# Use ACTIVE_POOL env to decide primary
PRIMARY="${ACTIVE_POOL:-blue}"
APP_PORT="${APP_PORT:-3000}"

if [ "$PRIMARY" = "blue" ]; then
  PNAME="app_blue"
  BNAME="app_green"
else
  PNAME="app_green"
  BNAME="app_blue"
fi

cat > /etc/nginx/conf.d/upstream.conf <<EOF
# Auto-generated by entrypoint
upstream backend_pool {
    # primary server - low max_fails so failures are detected quickly
    server ${PNAME}:${APP_PORT} max_fails=1 fail_timeout=5s;
    # backup server - used when primary fails
    server ${BNAME}:${APP_PORT} backup;
}

server {
    listen 80;

    location / {
        # preserve headers from app
        proxy_http_version 1.1;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;

        # Tight timeouts
        proxy_connect_timeout 2s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;

        # Retry policy: retries on errors/timeouts/5xx
        proxy_next_upstream error timeout http_502 http_503 http_504 http_500;
        proxy_next_upstream_tries 2;

        proxy_pass http://backend_pool;
    }

    location /nginx_status {
        return 200 "OK\n";
    }
}
EOF

# Validate config and start nginx (foreground)
nginx -t
exec nginx -g "daemon off;"
